@page "/admin/users/"

@using BlazorDemo.Common.Extensions
@using BlazorDemo.Common.Extensions.Collections
@using BlazorDemo.Common.Models.Account.ViewModels
@inherits ListUsersBase

@if (IsAuthorized())
{
    <ConfirmationDialog @ref="ConfirmationDialog_DeleteUser" ConfirmationChanged="BtnConfirmUserDelete_ClickAsync"></ConfirmationDialog>
    <div class="row">
        <div class="col-12">
            <h3>Administrate Users</h3>
            <hr class="mt-10px" />
        </div>
    </div>
    <div class="row">
        <div class="col-xl-2 col-lg-3 col-md-4 col-6">
            <CustomButton Styling="ButtonStyling.Primary" ButtonState="_btnAddUserState" OnClick="@BtnAddUser_ClickAsync">
                Add User
                <i class="fa fa-plus ml-10px"></i>
            </CustomButton>
        </div>
    </div>
    <div class="card-deck row">
        @if (!Users.Any())
        {
            <div class="col-12 d-flex justify-content-center">
                <h3 style="color: #ff3333">&lt; No Users &gt;</h3>
            </div>
        }
        else
        {
            foreach (var user in Users.OrderBy(r => r.UserName))
            {
                <div class="col-lg-4 col-md-6 col-12">
                    <div class="card">
                        <div class="card-header d-flex justify-content-center">
                            <h3>@user.UserName</h3>
                        </div>
                        <div class="card-body container">
                            <div class="row p-5px">
                                <div class="col-12">
                                    <h5 style="text-overflow: ellipsis; white-space: nowrap; overflow: hidden; display: block;">
                                        <span style="color: orange">Id:</span> @user.Id
                                    </h5>
                                    <h5 style="text-overflow: ellipsis; white-space: nowrap; overflow: hidden; display: block;">
                                        <span style="color: orange">Email:</span> @user.Email
                                    </h5>
                                </div>
                                <div class="col-6">
                                    <h4 class="mb-5px" style="color: blue; text-overflow: ellipsis; white-space: nowrap; overflow: hidden; display: block;">Roles:</h4>
                                    @if (!user.Roles.Any())
                                    {
                                        <h6 class="ml-10px" style="color: #ff3333; text-overflow: ellipsis; white-space: nowrap; overflow: hidden; display: block;">&lt; No Roles &gt;</h6>
                                    }
                                    else
                                    {
                                        foreach (var role in user.Roles.OrderBy(r => r.Name))
                                        {
                                            <h6 class="ml-10px" style="text-overflow: ellipsis; white-space: nowrap; overflow: hidden; display: block;">@role.Name</h6>
                                        }
                                    }
                                </div>
                                <div class="col-6">
                                    <h4 class="mb-5px" style="color: green; text-overflow: ellipsis; white-space: nowrap; overflow: hidden; display: block;">Claims:</h4>
                                    @if (!user.Claims.Any())
                                    {
                                        <h6 class="ml-10px" style="color: #ff3333; text-overflow: ellipsis; white-space: nowrap; overflow: hidden; display: block;">&lt; No Claims &gt;</h6>
                                    }
                                    else
                                    {
                                        foreach (var claim in user.Claims.OrderBy(c => c.Name))
                                        {
                                            <h6 class="ml-10px" style="text-overflow: ellipsis; white-space: nowrap; overflow: hidden; display: block;">@claim.Name</h6>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <div class="container">
                                <div class="row p-5px justify-content-center">
                                    <div class="col-xl-4 col-lg-6 col-12">
                                        <CustomButton Styling="ButtonStyling.Primary" ButtonState="_btnEditUserStates.VorN(user.Id)" OnClick="@(() => BtnEditUser_ClickAsync(user))">Edit</CustomButton>
                                    </div>
                                    <div class="col-xl-4 col-lg-6 col-12">
                                        <CustomButton Styling="ButtonStyling.Danger" ButtonState="_btnDeleteUserStates.VorN(user.Id)" OnClick="@(() => BtnDeleteUser_ClickAsync(user))">Delete</CustomButton>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
}